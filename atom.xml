<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Seamo</title>
  <icon>https://www.gravatar.com/avatar/7f99b247a6b949d50a88d44294bb8123</icon>
  
  <link href="https://seadeemo.github.io/atom.xml" rel="self"/>
  
  <link href="https://seadeemo.github.io/"/>
  <updated>2024-03-14T09:45:03.226Z</updated>
  <id>https://seadeemo.github.io/</id>
  
  <author>
    <name>Seamo</name>
    <email>lihaichen_kazusa@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树</title>
    <link href="https://seadeemo.github.io/2024/03/14/%E6%A0%91/"/>
    <id>https://seadeemo.github.io/2024/03/14/%E6%A0%91/</id>
    <published>2024-03-13T16:00:00.000Z</published>
    <updated>2024-03-14T09:45:03.226Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/seadeemo/algorithm-demo/tree/main/tree-demo">树的demo</a></p><blockquote><p>树由节点构成,也可以没有节点,称为空树</p></blockquote><blockquote><p>一些基本概念：</p><p>根节点、子节点</p><p>节点的度：即子节点的个数</p><p>叶子节点：度为0的节点</p></blockquote><h3 id="1-1-二叉树"><a href="#1-1-二叉树" class="headerlink" title="1.1 二叉树"></a>1.1 二叉树</h3><h4 id="1-1-1-二叉树的遍历"><a href="#1-1-1-二叉树的遍历" class="headerlink" title="1.1.1 二叉树的遍历"></a>1.1.1 二叉树的遍历</h4><blockquote><p>一颗二叉树,可以分解为根节点,左子树,右子树 三个部分</p></blockquote><blockquote><p>二叉树的遍历</p><ol><li>先序遍历(先根遍历) —&gt; 根节点 左子树 右子树</li><li>中序遍历(中根遍历) —&gt; 左子树 根节点 右子树</li><li>后序遍历(后根遍历) —&gt; 左子树 右子树 根节点</li></ol></blockquote><h4 id="1-1-2-满二叉树-完全二叉树"><a href="#1-1-2-满二叉树-完全二叉树" class="headerlink" title="1.1.2 满二叉树,完全二叉树"></a>1.1.2 满二叉树,完全二叉树</h4><blockquote><p>满二叉树:深度为k且节点数2^k-1</p></blockquote><blockquote><p>完全二叉树:一棵深度为k的完全二叉树自上而下、自左到右的给每一个节点编号，其每一个节点的编号与一棵深度为k的满二叉树的对应节点的编号相同。</p><ol><li>给定一颗满二叉树,由根节点逐层从左至右标号,在满二叉树的基础上,删去标号最高的节点,即为完全二叉树</li><li>在完全二叉树的基础上,再删去标号最高的节点,也可以得到一颗完全二叉树</li></ol><p>故由概念可知,不完整的层只有一层,且不完整的层只有右边的节点缺失,或是一颗满二叉树的二叉树,是完全二叉树</p></blockquote><blockquote><p><strong>一颗深度为k的完全二叉树,至少拥有多少个节点?  2^(k-1)</strong></p><p><strong>一颗深度为k的完全二叉树,至少拥有多少个叶子节点?  2^(k-2)</strong></p><table><thead><tr><th align="center">完全二叉树节点最少问题</th></tr></thead><tbody><tr><td align="center"><img src="/./img/%E6%A0%91-1.png" alt="./img/image-20220518212815017"></td></tr></tbody></table></blockquote><h4 id="1-1-3-二叉树的遍历"><a href="#1-1-3-二叉树的遍历" class="headerlink" title="1.1.3 二叉树的遍历"></a>1.1.3 二叉树的遍历</h4><p><a href="https://github.com/seadeemo/algorithm-demo/tree/main/tree-demo/tree-traversal-demo">二叉树的遍历demo</a></p><blockquote><p>力扣-树的遍历</p><p><a href="https://leetcode.cn/problems/binary-tree-preorder-traversal/">力扣-二叉树前序遍历</a></p><p><a href="https://leetcode.cn/problems/binary-tree-postorder-traversal/">力扣-二叉树后序遍历</a></p><p><a href="https://leetcode.cn/problems/binary-tree-inorder-traversal/">力扣-二叉树中序遍历</a></p><p><a href="https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/">力扣-N叉树的前序遍历</a></p><p><a href="https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/">力扣-N叉树的后序遍历</a></p></blockquote><blockquote><p>力扣-树的层序遍历</p><p><a href="https://leetcode.cn/problems/binary-tree-level-order-traversal/">力扣-二叉树的层序遍历</a></p><p><a href="https://leetcode.cn/problems/binary-tree-level-order-traversal-ii/">力扣-二叉树的层次遍历II</a></p><p><a href="https://leetcode.cn/problems/binary-tree-right-side-view/">力扣-二叉树的右视图</a></p><p><a href="https://leetcode.cn/problems/average-of-levels-in-binary-tree/">力扣-二叉树的层平均值</a></p><p><a href="https://leetcode.cn/problems/n-ary-tree-level-order-traversal/">力扣-N叉树的层序遍历</a></p><p><a href="https://leetcode.cn/problems/find-largest-value-in-each-tree-row/">力扣-在每个树行中找最大值</a></p><p><a href="https://leetcode.cn/problems/populating-next-right-pointers-in-each-node/">力扣-填充每个节点的下一个右侧节点指针</a></p><p><a href="https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii/">力扣-填充每个节点的下一个右侧节点指针II</a></p><p><a href="https://leetcode.cn/problems/maximum-depth-of-binary-tree/">力扣-二叉树的最大深度</a></p><p><a href="https://leetcode.cn/problems/minimum-depth-of-binary-tree/">力扣-二叉树的最小深度</a></p></blockquote><h5 id="1-1-3-1-使用递归遍历："><a href="#1-1-3-1-使用递归遍历：" class="headerlink" title="1.1.3.1 使用递归遍历："></a>1.1.3.1 使用递归遍历：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-13 9:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChainedTree</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Comparable</span>&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TreeNode&lt;T&gt; root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中序遍历--递归</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">inorderTraversalRecursion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> inorderTraversalRecursion(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中序遍历--递归</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; <span class="title function_">inorderTraversalRecursion</span><span class="params">(TreeNode&lt;T&gt; currentRoot)</span> &#123;</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (currentRoot.left != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.addAll(inorderTraversalRecursion(currentRoot.left));</span><br><span class="line">        &#125;</span><br><span class="line">        result.add(currentRoot.val);</span><br><span class="line">        <span class="keyword">if</span> (currentRoot.right != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.addAll(inorderTraversalRecursion(currentRoot.right));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前序遍历--递归</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">preorderTraversalRecursion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> preorderTraversalRecursion(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前序遍历--递归</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; <span class="title function_">preorderTraversalRecursion</span><span class="params">(TreeNode&lt;T&gt; currentRoot)</span> &#123;</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        result.add(currentRoot.val);</span><br><span class="line">        <span class="keyword">if</span> (currentRoot.left != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.addAll(preorderTraversalRecursion(currentRoot.left));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (currentRoot.right != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.addAll(preorderTraversalRecursion(currentRoot.right));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后序遍历--递归</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">postorderTraversalRecursion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> postorderTraversalRecursion(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后序遍历--递归</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; <span class="title function_">postorderTraversalRecursion</span><span class="params">(TreeNode&lt;T&gt; currentRoot)</span> &#123;</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (currentRoot.left != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.addAll(postorderTraversalRecursion(currentRoot.left));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (currentRoot.right != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.addAll(postorderTraversalRecursion(currentRoot.right));</span><br><span class="line">        &#125;</span><br><span class="line">        result.add(currentRoot.val);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(T value)</span> &#123;</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">            root.val = value;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeNode&lt;T&gt; current = root;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value.compareTo(current.val) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.left;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.left = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.left.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.right;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.right = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.right.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TreeNode</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> T val;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-1-3-2-使用迭代遍历："><a href="#1-1-3-2-使用迭代遍历：" class="headerlink" title="1.1.3.2 使用迭代遍历："></a>1.1.3.2 使用迭代遍历：</h5><p>该迭代遍历前、中、后序的写法不统一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-13 9:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChainedTree</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Comparable</span>&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TreeNode&lt;T&gt; root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前序遍历--迭代(根左右，栈先进后出，故先右后左，入栈顺序与遍历顺序对应)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">preorderTraversalIteration</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&lt;T&gt;&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        TreeNode&lt;T&gt; current;</span><br><span class="line">        stack.push(root);</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(size);</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            current = stack.pop();</span><br><span class="line">            result.add(current.val);</span><br><span class="line">            <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                stack.push(current.right);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                stack.push(current.left);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中序遍历--迭代(左根右，先找到最左边的，再找右边的，栈仅用作记录入栈关系)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">inorderTraversalIteration</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&lt;T&gt;&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        TreeNode&lt;T&gt; current = root;</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(size);</span><br><span class="line">        <span class="keyword">while</span> (current != <span class="literal">null</span> || !stack.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (current != <span class="literal">null</span>) &#123;</span><br><span class="line">                stack.push(current);</span><br><span class="line">                current = current.left;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                current = stack.pop();</span><br><span class="line">                result.add(current.val);</span><br><span class="line">                current = current.right;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后序遍历--迭代(左右根，实际上是根右左的反向)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">postorderTraversalIteration</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&lt;T&gt;&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        stack.push(root);</span><br><span class="line">        TreeNode&lt;T&gt; current;</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(size);</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            current = stack.pop();</span><br><span class="line">            result.add(current.val);</span><br><span class="line">            <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                stack.push(current.left);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                stack.push(current.right);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.reverse(result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(T value)</span> &#123;</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">            root.val = value;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeNode&lt;T&gt; current = root;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value.compareTo(current.val) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.left;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.left = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.left.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.right;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.right = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.right.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TreeNode</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> T val;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-1-3-3-使用统一写法的迭代遍历-使用null做标记"><a href="#1-1-3-3-使用统一写法的迭代遍历-使用null做标记" class="headerlink" title="1.1.3.3 使用统一写法的迭代遍历(使用null做标记)"></a>1.1.3.3 使用统一写法的迭代遍历(使用null做标记)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-13 9:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChainedTree</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Comparable</span>&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TreeNode&lt;T&gt; root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中序遍历--迭代(统一写法)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">inorderTraversal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&lt;T&gt;&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(size);</span><br><span class="line">        stack.push(root);</span><br><span class="line">        TreeNode&lt;T&gt; current;</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            current = stack.peek();</span><br><span class="line">            stack.pop();</span><br><span class="line">            <span class="keyword">if</span> (current != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    stack.push(current.right);</span><br><span class="line">                &#125;</span><br><span class="line">                stack.push(current);</span><br><span class="line">                stack.push(<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    stack.push(current.left);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                current = stack.pop();</span><br><span class="line">                result.add(current.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前序遍历--迭代(统一写法)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">preorderTraversal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&lt;T&gt;&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(size);</span><br><span class="line">        stack.push(root);</span><br><span class="line">        TreeNode&lt;T&gt; current;</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            current = stack.peek();</span><br><span class="line">            stack.pop();</span><br><span class="line">            <span class="keyword">if</span> (current != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    stack.push(current.right);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    stack.push(current.left);</span><br><span class="line">                &#125;</span><br><span class="line">                stack.push(current);</span><br><span class="line">                stack.push(<span class="literal">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                current = stack.pop();</span><br><span class="line">                result.add(current.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后序遍历--迭代(统一写法)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">postorderTraversal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&lt;T&gt;&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(size);</span><br><span class="line">        stack.push(root);</span><br><span class="line">        TreeNode&lt;T&gt; current;</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            current = stack.peek();</span><br><span class="line">            stack.pop();</span><br><span class="line">            <span class="keyword">if</span> (current != <span class="literal">null</span>) &#123;</span><br><span class="line">                stack.push(current);</span><br><span class="line">                stack.push(<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    stack.push(current.right);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    stack.push(current.left);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                current = stack.pop();</span><br><span class="line">                result.add(current.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(T value)</span> &#123;</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">            root.val = value;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeNode&lt;T&gt; current = root;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value.compareTo(current.val) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.left;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.left = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.left.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.right;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.right = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.right.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TreeNode</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> T val;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-1-3-4-层序遍历"><a href="#1-1-3-4-层序遍历" class="headerlink" title="1.1.3.4 层序遍历"></a>1.1.3.4 层序遍历</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-13 9:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChainedTree</span>&lt;T <span class="keyword">extends</span> <span class="title class_">Comparable</span>&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TreeNode&lt;T&gt; root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 层序遍历</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;T&gt;&gt; <span class="title function_">levelOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Queue&lt;TreeNode&lt;T&gt;&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        List&lt;List&lt;T&gt;&gt; result = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        TreeNode&lt;T&gt; current;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            List&lt;T&gt; currentList = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> queue.size();</span><br><span class="line">            <span class="keyword">while</span> (size &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                current = queue.poll();</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    queue.offer(current.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    queue.offer(current.right);</span><br><span class="line">                &#125;</span><br><span class="line">                currentList.add(current.val);</span><br><span class="line">                size--;</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(currentList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(T value)</span> &#123;</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">            root.val = value;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeNode&lt;T&gt; current = root;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value.compareTo(current.val) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.left != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.left;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.left = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.left.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (current.right != <span class="literal">null</span>) &#123;</span><br><span class="line">                    current = current.right;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    current.right = <span class="keyword">new</span> <span class="title class_">TreeNode</span>&lt;&gt;();</span><br><span class="line">                    current.right.val = value;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TreeNode</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> T val;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TreeNode&lt;T&gt; right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-2-3-4树"><a href="#1-2-2-3-4树" class="headerlink" title="1.2 2-3-4树"></a>1.2 2-3-4树</h3><blockquote><p>2-3-4树是一种多路查找树</p><ol><li>所有叶子节点拥有相同的深度</li><li>节点只能是2节点(一个元素,最多有两个子节点),3节点(两个元素,最多有三个子节点),4节点(三个元素,最多有四个子节点)</li><li>所有节点至少包含一个元素</li></ol><table><thead><tr><th align="center">2-3-4树添加元素</th></tr></thead><tbody><tr><td align="center"><img src="/./img/%E6%A0%91-2.png" alt="./img/image-20220519142946533"></td></tr></tbody></table><table><thead><tr><th align="center">2-3-4树节点</th></tr></thead><tbody><tr><td align="center"><img src="/./img/%E6%A0%91-3.png" alt="./img/image-20220519142513669"></td></tr></tbody></table></blockquote><h3 id="1-3-红黑树"><a href="#1-3-红黑树" class="headerlink" title="1.3 红黑树"></a>1.3 红黑树</h3><h4 id="1-3-1-红黑树定义"><a href="#1-3-1-红黑树定义" class="headerlink" title="1.3.1 红黑树定义"></a>1.3.1 红黑树定义</h4><blockquote><p>红黑树:</p><ol><li>每个节点要么是黑色,要么是红色</li><li>根节点是黑色</li><li>每个叶子节点是NIL节点(空值节点),是黑色节点</li><li>不存在两个连续的红节点</li><li>任意一个节点到每一个叶子节点的路径上,包含相同数量的黑节点<font color="red">(其实统计的是2-3-4树中的层数,黑节点是用来标记曾在2-3-4树中的层级,故红黑树的平衡指的是黑节点的平衡)</font></li></ol></blockquote><h4 id="1-3-2-2-3-4树转红黑树"><a href="#1-3-2-2-3-4树转红黑树" class="headerlink" title="1.3.2 2-3-4树转红黑树"></a>1.3.2 2-3-4树转红黑树</h4><blockquote><p>2-3-4树转化为红黑树:</p><ol><li>2节点 —-&gt; 黑节点</li><li>3节点 —-&gt; 一黑一红</li><li>4节点 —-&gt; 一黑两红</li></ol><table><thead><tr><th align="center">2-3-4树转化红黑树</th></tr></thead><tbody><tr><td align="center"><img src="/./img/%E6%A0%91-4.png" alt="./img/image-20220519144513388"></td></tr></tbody></table></blockquote><h4 id="1-3-3-红黑树插入元素"><a href="#1-3-3-红黑树插入元素" class="headerlink" title="1.3.3 红黑树插入元素"></a>1.3.3 红黑树插入元素</h4><blockquote><p><font color="red">红黑树插入元素时注意! 需要插入到红黑节点之间或之后时,需要考虑自平衡的状态!</font></p><table><thead><tr><th align="center">向下图中的红黑树中插入值为3.1的节点,插入之后的红黑树应该是怎么样?</th></tr></thead><tbody><tr><td align="center"><img src="/./img/%E6%A0%91-5.png" alt="./img/image-20220519150430936"></td></tr></tbody></table><p><img src="/./img/%E6%A0%91-6.png" alt="./img/image-20220519150923506"></p><table><thead><tr><th align="center">向如下图左树中插入2.5</th></tr></thead><tbody><tr><td align="center"><img src="/./img/%E6%A0%91-7.png" alt="./img/image-20220519154901776"></td></tr></tbody></table></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/seadeemo/algorithm-demo/tree/main/tree-demo&quot;&gt;树的demo&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;树由节点构成,也可以没有节点,称为空树&lt;/p&gt;
&lt;/blockqu</summary>
      
    
    
    
    <category term="算法" scheme="https://seadeemo.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="https://seadeemo.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="算法" scheme="https://seadeemo.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="https://seadeemo.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="树" scheme="https://seadeemo.github.io/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>easyexcel自定义excel导出</title>
    <link href="https://seadeemo.github.io/2024/03/11/EasyExcel%E5%AE%9E%E7%8E%B0%E9%9D%9E%E6%A8%A1%E6%9D%BF%E8%87%AA%E5%AE%9A%E4%B9%89Excel%E5%AF%BC%E5%87%BA/"/>
    <id>https://seadeemo.github.io/2024/03/11/EasyExcel%E5%AE%9E%E7%8E%B0%E9%9D%9E%E6%A8%A1%E6%9D%BF%E8%87%AA%E5%AE%9A%E4%B9%89Excel%E5%AF%BC%E5%87%BA/</id>
    <published>2024-03-10T16:00:00.000Z</published>
    <updated>2024-03-13T09:46:16.996Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-关于需求"><a href="#1-关于需求" class="headerlink" title="1 关于需求"></a>1 关于需求</h3><p>最近需要做一个Excel的动态导出，大致样式如下：</p><p><img src="/img/EasyExcel%E5%AE%9E%E7%8E%B0%E9%9D%9E%E6%A8%A1%E6%9D%BF%E8%87%AA%E5%AE%9A%E4%B9%89Excel%E5%AF%BC%E5%87%BA-1.png" alt="image-20240311093225548"></p><p>我们可以根据需求将一个excel分为如下图的四个部分：</p><p><img src="/img/EasyExcel%E5%AE%9E%E7%8E%B0%E9%9D%9E%E6%A8%A1%E6%9D%BF%E8%87%AA%E5%AE%9A%E4%B9%89Excel%E5%AF%BC%E5%87%BA-4.png" alt="企业微信截图_17101209325397"></p><p>图中的excel大致可以分为四个部分：</p><pre><code>1. 标题部分，最关键的地方就在于需要动态的根据导出的总列数来合并单元格1. 单据数据部分，这一部分是整个单据的基础信息，需要水平方向排列，并且需要支持仅导出特定的字段1. 货品数据部分，这一部分就是最常见的excel表格的排列方式了，只是也需要支持仅导出特定字段1. 签字栏，这部分和单据数据部分相似，都是水平方向排列</code></pre><p>选择使用easyexcel来实现该功能。</p><h3 id="2-版本信息"><a href="#2-版本信息" class="headerlink" title="2 版本信息"></a>2 版本信息</h3><p>easyexcel使用2.2.10，cglib使用3.1</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其他依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-基本实现"><a href="#3-基本实现" class="headerlink" title="3 基本实现"></a>3 基本实现</h3><p>对于标题、单据数据、签字栏部分，可以使用List&lt;List&lt;String&gt;&gt;的数据来实现；而货品数据部分，直接使用List&lt;Object&gt;的方式更加方便。</p><p>货品数据的实体类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.excel.annotation.ExcelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 基本的例子</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-08 17:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleDomain</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;姓名&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;银行余额&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal bankBalance;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;描述&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;不导出的属性&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String exclude;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>导出工具类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.excel.EasyExcel;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.ExcelWriter;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.support.ExcelTypeEnum;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.merge.OnceAbsoluteMergeStrategy;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.metadata.WriteSheet;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.metadata.WriteTable;</span><br><span class="line"><span class="keyword">import</span> com.kazusa.test.easyexcel.demo.simple.domain.SimpleDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 基本的例子</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-08 17:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleTestService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FILE_LOCATION</span> <span class="operator">=</span> <span class="string">&quot;D:/test.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 构建writer</span></span><br><span class="line">        <span class="type">ExcelWriter</span> <span class="variable">writer</span> <span class="operator">=</span> EasyExcel.write(FILE_LOCATION, SimpleDomain.class)</span><br><span class="line">                .autoCloseStream(Boolean.FALSE)</span><br><span class="line">                .excelType(ExcelTypeEnum.XLSX)</span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建sheet</span></span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">sheet</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="string">&quot;test-sheet-name&quot;</span>)</span><br><span class="line">                .needHead(Boolean.FALSE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建标题</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; title = Collections.singletonList(Collections.singletonList(<span class="string">&quot;标题1&quot;</span>));</span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">titleTable</span> <span class="operator">=</span> EasyExcel.writerTable(<span class="number">0</span>)</span><br><span class="line">                .needHead(Boolean.FALSE)</span><br><span class="line">                .registerWriteHandler(<span class="keyword">new</span> <span class="title class_">OnceAbsoluteMergeStrategy</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>))<span class="comment">// 合并单元格</span></span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 写入标题</span></span><br><span class="line">        writer.write(title, sheet, titleTable);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建两个表的数据：一个竖直方向排列，一个水平方向排列</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">blank</span> <span class="operator">=</span> <span class="string">&quot;     &quot;</span>;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; vTableData = Arrays.asList(</span><br><span class="line">                Arrays.asList(<span class="string">&quot;编号:&quot;</span>, <span class="string">&quot;4536251&quot;</span>, blank, <span class="string">&quot;时间:&quot;</span>, <span class="string">&quot;2024-01-02&quot;</span>, blank, <span class="string">&quot;操作人:&quot;</span>, <span class="string">&quot;ADMIN&quot;</span>),</span><br><span class="line">                Arrays.asList(<span class="string">&quot;操作时间:&quot;</span>, <span class="string">&quot;2024-01-01&quot;</span>),</span><br><span class="line">                Arrays.asList(<span class="string">&quot;描述信息:&quot;</span>, <span class="string">&quot;描述描述描述描述描述描述描述描述&quot;</span>),</span><br><span class="line">                Collections.singletonList(<span class="string">&quot;&quot;</span>) <span class="comment">// 添加一个空行</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        List&lt;SimpleDomain&gt; hTableData = Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">1L</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">24</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22.22&quot;</span>), <span class="string">&quot;张三的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">2L</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">30</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22222.22&quot;</span>), <span class="string">&quot;李四的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">3L</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">56</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22333.22&quot;</span>), <span class="string">&quot;王五的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">4L</span>, <span class="string">&quot;赵六&quot;</span>, <span class="number">16</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22.2244&quot;</span>), <span class="string">&quot;赵六的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">5L</span>, <span class="string">&quot;钱七&quot;</span>, <span class="number">23</span>, BigDecimal.ZERO, <span class="string">&quot;钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪&quot;</span>, <span class="string">&quot;不导出&quot;</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写入两个表：一个竖直方向排列，一个水平方向排列</span></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">vTable</span> <span class="operator">=</span> EasyExcel.writerTable(<span class="number">1</span>).build();</span><br><span class="line">        writer.write(vTableData, sheet, vTable);</span><br><span class="line"></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">hTable</span> <span class="operator">=</span> EasyExcel.writerTable(<span class="number">2</span>)<span class="comment">// 需要指定tableNo,head才能正常导出</span></span><br><span class="line">                .includeColumnFiledNames(Arrays.asList(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;bankBalance&quot;</span>, <span class="string">&quot;desc&quot;</span>))<span class="comment">// 选择某些属性导出</span></span><br><span class="line"><span class="comment">//                .excludeColumnFiledNames()// 也可以排除某些属性</span></span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line">        writer.write(hTableData, sheet, hTable);</span><br><span class="line"></span><br><span class="line">        writer.finish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SimpleTestService</span>().export();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终导出结果如图：</p><p><img src="/img/EasyExcel%E5%AE%9E%E7%8E%B0%E9%9D%9E%E6%A8%A1%E6%9D%BF%E8%87%AA%E5%AE%9A%E4%B9%89Excel%E5%AF%BC%E5%87%BA-2.png" alt="image-20240311095425156"></p><p>可以看到，基本实现了我们的需求，但是有一个问题：列宽并没有自适应，导致部分列的文本显示不全。我们在26行和38行添加自适应列宽的handler，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.excel.EasyExcel;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.ExcelWriter;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.support.ExcelTypeEnum;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.handler.WriteHandler;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.merge.OnceAbsoluteMergeStrategy;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.metadata.WriteSheet;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.metadata.WriteTable;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.write.style.column.LongestMatchColumnWidthStyleStrategy;</span><br><span class="line"><span class="keyword">import</span> com.kazusa.test.easyexcel.demo.simple.domain.SimpleDomain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 基本的例子</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> kazusa</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2024-03-08 17:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleTestService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FILE_LOCATION</span> <span class="operator">=</span> <span class="string">&quot;D:/test.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 构建一个自动列宽handler</span></span><br><span class="line">        <span class="type">WriteHandler</span> <span class="variable">autoResize</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LongestMatchColumnWidthStyleStrategy</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建writer</span></span><br><span class="line">        <span class="type">ExcelWriter</span> <span class="variable">writer</span> <span class="operator">=</span> EasyExcel.write(FILE_LOCATION, SimpleDomain.class)</span><br><span class="line">                .autoCloseStream(Boolean.FALSE)</span><br><span class="line">                .excelType(ExcelTypeEnum.XLSX)</span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建sheet</span></span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">sheet</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="string">&quot;test-sheet-name&quot;</span>)</span><br><span class="line">                .registerWriteHandler(autoResize)<span class="comment">// 每一个sheet使用一个handler</span></span><br><span class="line">                .needHead(Boolean.FALSE)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建标题</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; title = Collections.singletonList(Collections.singletonList(<span class="string">&quot;标题1&quot;</span>));</span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">titleTable</span> <span class="operator">=</span> EasyExcel.writerTable(<span class="number">0</span>)</span><br><span class="line">                .needHead(Boolean.FALSE)</span><br><span class="line">                .registerWriteHandler(<span class="keyword">new</span> <span class="title class_">OnceAbsoluteMergeStrategy</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>))<span class="comment">// 合并单元格</span></span><br><span class="line">                .build();</span><br><span class="line">        <span class="comment">// 写入标题</span></span><br><span class="line">        writer.write(title, sheet, titleTable);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建两个表的数据：一个竖直方向排列，一个水平方向排列</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">blank</span> <span class="operator">=</span> <span class="string">&quot;     &quot;</span>;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; vTableData = Arrays.asList(</span><br><span class="line">                Arrays.asList(<span class="string">&quot;编号:&quot;</span>, <span class="string">&quot;4536251&quot;</span>, blank, <span class="string">&quot;时间:&quot;</span>, <span class="string">&quot;2024-01-02&quot;</span>, blank, <span class="string">&quot;操作人:&quot;</span>, <span class="string">&quot;ADMIN&quot;</span>),</span><br><span class="line">                Arrays.asList(<span class="string">&quot;操作时间:&quot;</span>, <span class="string">&quot;2024-01-01&quot;</span>),</span><br><span class="line">                Arrays.asList(<span class="string">&quot;描述信息:&quot;</span>, <span class="string">&quot;描述描述描述描述描述描述描述描述&quot;</span>),</span><br><span class="line">                Collections.singletonList(<span class="string">&quot;&quot;</span>) <span class="comment">// 添加一个空行</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        List&lt;SimpleDomain&gt; hTableData = Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">1L</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">24</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22.22&quot;</span>), <span class="string">&quot;张三的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">2L</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">30</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22222.22&quot;</span>), <span class="string">&quot;李四的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">3L</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">56</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22333.22&quot;</span>), <span class="string">&quot;王五的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">4L</span>, <span class="string">&quot;赵六&quot;</span>, <span class="number">16</span>, <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;22.2244&quot;</span>), <span class="string">&quot;赵六的描述很短&quot;</span>, <span class="string">&quot;不导出&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SimpleDomain</span>(<span class="number">5L</span>, <span class="string">&quot;钱七&quot;</span>, <span class="number">23</span>, BigDecimal.ZERO, <span class="string">&quot;钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪钱七的描述很短才怪&quot;</span>, <span class="string">&quot;不导出&quot;</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写入两个表：一个竖直方向排列，一个水平方向排列</span></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">vTable</span> <span class="operator">=</span> EasyExcel.writerTable(<span class="number">1</span>).build();</span><br><span class="line">        writer.write(vTableData, sheet, vTable);</span><br><span class="line"></span><br><span class="line">        <span class="type">WriteTable</span> <span class="variable">hTable</span> <span class="operator">=</span> EasyExcel.writerTable(<span class="number">2</span>)<span class="comment">// 需要指定tableNo,head才能正常导出</span></span><br><span class="line">                .includeColumnFiledNames(Arrays.asList(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;bankBalance&quot;</span>, <span class="string">&quot;desc&quot;</span>))<span class="comment">// 选择某些属性导出</span></span><br><span class="line"><span class="comment">//                .excludeColumnFiledNames()// 也可以排除某些属性</span></span><br><span class="line">                .needHead(Boolean.TRUE)</span><br><span class="line">                .build();</span><br><span class="line">        writer.write(hTableData, sheet, hTable);</span><br><span class="line"></span><br><span class="line">        writer.finish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SimpleTestService</span>().export();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后导出结果如下：</p><p><img src="/img/EasyExcel%E5%AE%9E%E7%8E%B0%E9%9D%9E%E6%A8%A1%E6%9D%BF%E8%87%AA%E5%AE%9A%E4%B9%89Excel%E5%AF%BC%E5%87%BA-3.png" alt="image-20240311095937208"></p><p>基本实现样式需求，剩余的文本居中、字体大小、单元格背景等easyexcel均提供了比较简单的api。</p><h3 id="4-完全实现"><a href="#4-完全实现" class="headerlink" title="4 完全实现"></a>4 完全实现</h3><p>详见：<a href="https://github.com/seadeemo/spring-demo/tree/main/easyexcel-demo">https://github.com/seadeemo/spring-demo/tree/main/easyexcel-demo</a></p><p>其中实现了单个excel单个sheet、单个excel多sheet、多个excel压缩包导出。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-关于需求&quot;&gt;&lt;a href=&quot;#1-关于需求&quot; class=&quot;headerlink&quot; title=&quot;1 关于需求&quot;&gt;&lt;/a&gt;1 关于需求&lt;/h3&gt;&lt;p&gt;最近需要做一个Excel的动态导出，大致样式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/EasyEx</summary>
      
    
    
    
    <category term="实用" scheme="https://seadeemo.github.io/categories/%E5%AE%9E%E7%94%A8/"/>
    
    
    <category term="Java" scheme="https://seadeemo.github.io/tags/Java/"/>
    
    <category term="Excel" scheme="https://seadeemo.github.io/tags/Excel/"/>
    
  </entry>
  
</feed>
